import { SEVERITY_TYPE } from './types.js';
/** Default emojis for common configs. */
export declare const EMOJI_CONFIGS: {
    a11y: string;
    accessibility: string;
    all: string;
    error: string;
    errors: string;
    recommended: string;
    strict: string;
    style: string;
    stylistic: string;
    ts: string;
    type: string;
    typed: string;
    types: string;
    typescript: string;
    warning: string;
    warnings: string;
};
export declare const EMOJI_CONFIG_ERROR = "\uD83D\uDCBC";
export declare const EMOJI_CONFIG_WARN = "\u26A0\uFE0F";
export declare const EMOJI_CONFIG_OFF = "\uD83D\uDEAB";
/** Emoji for each config severity. */
export declare const EMOJI_CONFIG_FROM_SEVERITY: {
    [key in SEVERITY_TYPE]: string;
};
/** Rule has an autofixer (from `meta.fixable`). */
export declare const EMOJI_FIXABLE = "\uD83D\uDD27";
/** Rule provides suggestions (`meta.hasSuggestions`). */
export declare const EMOJI_HAS_SUGGESTIONS = "\uD83D\uDCA1";
/** Rule options (from `meta.schema`). */
export declare const EMOJI_OPTIONS = "\u2699\uFE0F";
/**
 * Rule requires type-checking (from `meta.docs.requiresTypeChecking`).
 * Should match the emoji that @typescript-eslint/eslint-plugin uses for this (https://typescript-eslint.io/rules/).
 */
export declare const EMOJI_REQUIRES_TYPE_CHECKING = "\uD83D\uDCAD";
/**
 * Rule type (from `meta.type`).
 * Also see EMOJIS_TYPE defined in rule-type.ts.
 */
export declare const EMOJI_TYPE = "\uD83D\uDDC2\uFE0F";
/** Rule is deprecated (from `meta.deprecated`). */
export declare const EMOJI_DEPRECATED = "\u274C";
/**
 * The user is not allowed to specify a reserved emoji to represent their config because we use these emojis for other purposes.
 * Note that the default emojis for common configs are intentionally not reserved.
 */
export declare const RESERVED_EMOJIS: string[];
