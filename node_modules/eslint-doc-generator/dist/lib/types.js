// Custom types.
/**
 * Where a rule comes from (where it's defined).
 */
export var RULE_SOURCE;
(function (RULE_SOURCE) {
    RULE_SOURCE["self"] = "self";
    RULE_SOURCE["eslintCore"] = "eslintCore";
    RULE_SOURCE["thirdPartyPlugin"] = "thirdPartyPlugin";
})(RULE_SOURCE || (RULE_SOURCE = {}));
export const SEVERITY_ERROR = new Set([2, 'error']);
export const SEVERITY_WARN = new Set([1, 'warn']);
export const SEVERITY_OFF = new Set([0, 'off']);
export var SEVERITY_TYPE;
(function (SEVERITY_TYPE) {
    SEVERITY_TYPE["error"] = "error";
    SEVERITY_TYPE["warn"] = "warn";
    SEVERITY_TYPE["off"] = "off";
})(SEVERITY_TYPE || (SEVERITY_TYPE = {}));
export const SEVERITY_TYPE_TO_SET = {
    [SEVERITY_TYPE.error]: SEVERITY_ERROR,
    [SEVERITY_TYPE.warn]: SEVERITY_WARN,
    [SEVERITY_TYPE.off]: SEVERITY_OFF,
};
/**
 * Rule doc notices.
 */
export var NOTICE_TYPE;
(function (NOTICE_TYPE) {
    NOTICE_TYPE["CONFIGS"] = "configs";
    NOTICE_TYPE["DEPRECATED"] = "deprecated";
    NOTICE_TYPE["DESCRIPTION"] = "description";
    NOTICE_TYPE["FIXABLE"] = "fixable";
    NOTICE_TYPE["FIXABLE_AND_HAS_SUGGESTIONS"] = "fixableAndHasSuggestions";
    NOTICE_TYPE["HAS_SUGGESTIONS"] = "hasSuggestions";
    NOTICE_TYPE["OPTIONS"] = "options";
    NOTICE_TYPE["REQUIRES_TYPE_CHECKING"] = "requiresTypeChecking";
    NOTICE_TYPE["TYPE"] = "type";
})(NOTICE_TYPE || (NOTICE_TYPE = {}));
/**
 * Rule list columns.
 */
export var COLUMN_TYPE;
(function (COLUMN_TYPE) {
    COLUMN_TYPE["CONFIGS_ERROR"] = "configsError";
    COLUMN_TYPE["CONFIGS_OFF"] = "configsOff";
    COLUMN_TYPE["CONFIGS_WARN"] = "configsWarn";
    COLUMN_TYPE["DEPRECATED"] = "deprecated";
    COLUMN_TYPE["DESCRIPTION"] = "description";
    COLUMN_TYPE["FIXABLE"] = "fixable";
    COLUMN_TYPE["FIXABLE_AND_HAS_SUGGESTIONS"] = "fixableAndHasSuggestions";
    COLUMN_TYPE["HAS_SUGGESTIONS"] = "hasSuggestions";
    COLUMN_TYPE["NAME"] = "name";
    COLUMN_TYPE["OPTIONS"] = "options";
    COLUMN_TYPE["REQUIRES_TYPE_CHECKING"] = "requiresTypeChecking";
    COLUMN_TYPE["TYPE"] = "type";
})(COLUMN_TYPE || (COLUMN_TYPE = {}));
/**
 * CLI/config file options.
 */
export var OPTION_TYPE;
(function (OPTION_TYPE) {
    OPTION_TYPE["CHECK"] = "check";
    OPTION_TYPE["CONFIG_EMOJI"] = "configEmoji";
    OPTION_TYPE["CONFIG_FORMAT"] = "configFormat";
    OPTION_TYPE["IGNORE_CONFIG"] = "ignoreConfig";
    OPTION_TYPE["IGNORE_DEPRECATED_RULES"] = "ignoreDeprecatedRules";
    OPTION_TYPE["INIT_RULE_DOCS"] = "initRuleDocs";
    OPTION_TYPE["PATH_RULE_DOC"] = "pathRuleDoc";
    OPTION_TYPE["PATH_RULE_LIST"] = "pathRuleList";
    OPTION_TYPE["POSTPROCESS"] = "postprocess";
    OPTION_TYPE["RULE_DOC_NOTICES"] = "ruleDocNotices";
    OPTION_TYPE["RULE_DOC_SECTION_EXCLUDE"] = "ruleDocSectionExclude";
    OPTION_TYPE["RULE_DOC_SECTION_INCLUDE"] = "ruleDocSectionInclude";
    OPTION_TYPE["RULE_DOC_SECTION_OPTIONS"] = "ruleDocSectionOptions";
    OPTION_TYPE["RULE_DOC_TITLE_FORMAT"] = "ruleDocTitleFormat";
    OPTION_TYPE["RULE_LIST_COLUMNS"] = "ruleListColumns";
    OPTION_TYPE["RULE_LIST_SPLIT"] = "ruleListSplit";
    OPTION_TYPE["URL_CONFIGS"] = "urlConfigs";
    OPTION_TYPE["URL_RULE_DOC"] = "urlRuleDoc";
})(OPTION_TYPE || (OPTION_TYPE = {}));
